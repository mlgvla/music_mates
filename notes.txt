
Sprint 1
Finish Edit Page
[x]   - add placeholders to edit boxes
[x]   - populate checkboxes with user_instrument values on edit form
[x]   - redo visibility attribute type to string - public or private - public default
[x]   - Write PATCH route
[x]   - Create Show Page
Delete Account

Sprint 2
Finish Navigation Buttons between pages
Consider Navbar for Search and Logout
Activate Flash Messages

Sprint 3
Implement Find by Instrument - UserInstrument Controller
Helper Functions in UserInstrument Model?


TODOS

[x] - change visibility data type to string, rename to visibility
[x] - add user_instrument data to seed file
[x] - remove levels attribute from user_instrument table if not implemented in this version
[x] - fix bug where situation where no checkboxes are checked

- consider level a stretch feature for next version

- insert authentication_required call before user routes to generate flash notices



SAMPLE SEARCHES 

Finding Users by Instrument:
Example:
    - User.joins(:user_instruments).where(user_instruments: {instrument_id: 2})

Assigning a level to a UserInstrument
    - Must use ActiveRecord Extensions to do it semantically.

    - otherwise, must retrieve user and instrument ids and retrieve a UserInstrument Object explicitly, then assign level to level attribute

Update a level to a UserInstrument

    - UserInstrument.all[2].update(level: "Professional") or as in first example

Finding players by level

    - UserInstrument.where(level: "Professional") or as in first example

Finding players by instument and level

    - UserInstrument.where("instrument_id = ? AND level = ?", 2, "Professional") or as in first example

